#include <bits/stdc++.h>
using namespace std;

// Problem: Find the k-th character in a string generated by repeatedly appending the next alphabet character
//          for each character in the string, starting from 'a'.
// Approach: Use a loop to generate the string until its length is at least k, then return the k-th character.

// Steps:
// 1. Initialize a string with the first character 'a'.
// 2. Use a while loop to keep appending characters until the string's length is at least k.
// 3. For each character in the string, calculate the next character by incrementing its ASCII value and wrapping around after 'z'.
// 4. Return the k-th character from the string (1-based index).

// Time Complexity: O(k), where k is the input value.
// Space Complexity: O(k), as we store the generated string in memory.

class Solution {
public:
    // Function to find the k-th character in the generated string
    char kthCharacter(int k) {
        std::string sb = "a"; // Start with the initial string "a"
        // Keep generating the string until its length is at least k
        while (sb.length() < k) {
            int size = sb.length(); // Current size of the string
            // For each character in the current string
            for (int i = 0; i < size; ++i) {
                // Calculate the next character (wrap around after 'z')
                char nextChar = 'a' + ((sb[i] - 'a' + 1) % 26);
                sb += nextChar; // Append the next character to the string
            }
        }
        // Return the k-th character (1-based index)
        return sb[k - 1];
    }
};